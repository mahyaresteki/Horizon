@startuml

skinparam Shadowing True
skinparam titleFontSize 36pt

skinparam interface {
  BackgroundColor #333333
  FontColor white
}

skinparam component {
  BackgroundColor #FF9900
}

skinparam file {
  BackgroundColor #FFCC99
}

skinparam package {
  BackgroundColor #A9D0F5
}

skinparam node {
  BackgroundColor #FFFF99
}

skinparam database {
  BackgroundColor #99FF99
}

title Horizon Research Project (HRP) \n Deployment Diagram \n Version 25.5.28

package "User Layer" as userLayer {
    node "Client PC" as client <<device>> {
        port "any" as clientAnyIn
        portout "any" as clientAny
        component "Chrome/Firefox" as browser <<web browser>>
    }
}

package "HA Layer" as haLayer {
    
    node "Load Balancer (HA)" as haServer <<device>> {
        port "443" as api443
        portout "any" as apiAny
        component "Python 3.x" as python3 <<sdk>>
        component "Nginx" as webServer <<web server>>
        component "Flask" as flask <<web framework>>
        component "Flask-RESTX" as flaskrestx <<API framework>>
    }
    
}

package "Service Layer" as serviceLayer {
    
    node "API Gateway 1" as apiGateway_1 <<device>> {
        port "443" as apiGateway443_1
        portout "any" as apiGatewayAny_1
        component "API Gateway 1" as apiGW1 <<service>>
    }
    node "Service Server 1" as serviceServer1 <<virtual machine>> {
        port "443" as docker443_1
        portout "any" as dockerAny_1
        component "Docker" as docker_1 <<container>>
        component "Python 3.x" as python3_1 <<sdk>>
        component "Flask" as flask_1 <<web framework>>
        component "SQLAlchemy" as sqlalchamey_1 <<ORM framework>>
        component "Psycopg2" as psycopg2_1 <<data provider>>
    }

    node "API Gateway 2" as apiGateway_2 <<device>> {
        port "443" as apiGateway443_2
        portout "any" as apiGatewayAny_2
        component "API Gateway 2" as apiGW2 <<service>>
    }
    node "Service Server 2" as serviceServer2 <<virtual machine>> {
        port "443" as docker443_2
        portout "any" as dockerAny_2
        component "Docker" as docker_2 <<container>>
        component "Python 3.x" as python3_2 <<sdk>>
        component "Flask" as flask_2 <<web framework>>
        component "SQLAlchemy" as sqlalchamey_2 <<ORM framework>>
        component "Psycopg2" as psycopg2_2 <<data provider>>
    }

    node "API Gateway 3" as apiGateway_3 <<device>> {
        port "443" as apiGateway443_3
        portout "any" as apiGatewayAny_3
        component "API Gateway 3" as apiGW3 <<service>>
    }
    node "Service Server 3" as serviceServer3 <<virtual machine>>{
        port "443" as docker443_3
        portout "any" as dockerAny_3
        component "Docker" as docker_3 <<container>>
        component "Python 3.x" as python3_3 <<sdk>>
        component "Flask" as flask_3 <<web framework>>
        component "SQLAlchemy" as sqlalchamey_3 <<ORM framework>>
        component "Psycopg2" as psycopg2_3 <<data provider>>
    }
}

package "Database Layer" as databaseLayer {
    node "Database Cluster" as databaseCluster <<device>> {
        port "5432" as postgresql5432
        component "PostgreSQL Cluster (Primary/Replica)" as rdbms <<rdbms>>
        component "PostgreSQL Replica 1" as rdbms_replica1 <<rdbms>>
        component "PostgreSQL Replica 2" as rdbms_replica2 <<rdbms>>
    }
}

package "App Security Layer" as appSecurityLayer {
    node "Firewall Server" as firewallServer <<device>> {
        port "443" as firewall443
        portout "any" as firewallAny
        component "Firewall App" as firewallApp <<service>>
    }
}
package "Service Security Layer" as serviceSecurityLayer {
    node "WAF" as waf <<device>> {
        port "443" as waf443
        portout "any" as wafAny
        component "Web Application Firewall (WAF)" as wafApp <<service>>
    }
}

package "App Layer" as appLayer {
    node "App Server" as appServer <<device>> {
        port "443" as appServer443
        portout "any" as appServerAny
        component "Nginx" as webServer1 <<web server>>
    }
}

package "App Security Layer 2" as appSecurityLayer2 {
    node "Firewall Server" as firewallServer2 <<device>> {
        port "443" as firewall2443
        portout "any" as firewall2Any
        component "Firewall App" as firewallApp2 <<service>>
    }
}

package "Third Party Layer" as thirdPartyLayer {
    node "Jira Server" as jiraServer <<virtual machine>> {
        port "443" as jiraServer443
        component "Jira" as jira <<web app>>
    }

    node "Trello Server" as trelloServer <<virtual machine>> {
        port "443" as trelloServer443
        component "Trello" as trello <<web app>>
    }

    node "Bitbucket Server" as bitbucketServer <<virtual machine>> {
        port "443" as bitbuketServer443
        component "Bitbucket" as bitbucket <<web app>>
    }

    node "Github Server" as githubServer <<virtual machine>> {
        port "443" as githubServer443
        component "GitHub" as github <<web app>>
    }

    node "GitLab Server" as gitlabServer <<virtual machine>> {
        port "443" as gitlabServer443
        component "GitLab" as gitlab <<web app>>
    }

    node "File Server" as fileServer <<virtual machine>> {
        port "20" as fileServer20
        component "FTP Server" as ftp <<web app>>
    }
}


python3 ..> flask : <<uses>>
python3 ..> flaskrestx : <<uses>>

python3_1 ..> flask_1 : <<uses>>
python3_1 ..> psycopg2_1 : <<uses>>
python3_1 ..> sqlalchamey_1 : <<uses>>
docker_1 ..> python3_1 : <<runs>>

python3_2 ..> flask_2 : <<uses>>
python3_2 ..> psycopg2_2 : <<uses>>
python3_2 ..> sqlalchamey_2 : <<uses>>
docker_2 ..> python3_2 : <<runs>>

python3_3 ..> flask_3 : <<uses>>
python3_3 ..> psycopg2_3 : <<uses>>
python3_3 ..> sqlalchamey_3 : <<uses>>
docker_3 ..> python3_3 : <<runs>>

clientAny -- firewall443 : HTTPS
firewallAny -- appServer443 : HTTPS
appServerAny -- waf443 : HTTPS
wafAny -- api443 : HTTPS

apiAny -- apiGateway443_1 : HTTPS
apiAny -- apiGateway443_2 : HTTPS
apiAny -- apiGateway443_3 : HTTPS 

apiGatewayAny_1 -- docker443_1 : HTTPS
apiGatewayAny_2 -- docker443_2 : HTTPS
apiGatewayAny_3 -- docker443_3 : HTTPS

dockerAny_1 --- postgresql5432 : ODBC
dockerAny_2 --- postgresql5432 : ODBC
dockerAny_3 --- postgresql5432 : ODBC

dockerAny_1 --- firewall2443 : HTTPS
dockerAny_2 --- firewall2443 : HTTPS
dockerAny_3 --- firewall2443 : HTTPS
firewall2Any --- jiraServer443 : HTTPS
firewall2Any --- trelloServer443 : HTTPS
firewall2Any --- bitbuketServer443 : HTTPS
firewall2Any --- githubServer443 : HTTPS
firewall2Any --- gitlabServer443 : HTTPS
firewall2Any --- fileServer20 : HTTPS



postgresql5432 -- rdbms_replica1 : <<replication>> 
postgresql5432 -- rdbms_replica2 : <<replication>>

@enduml