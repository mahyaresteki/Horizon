@startuml

skinparam Shadowing True
skinparam titleFontSize 36pt

skinparam interface{
  BackgroundColor #Black
}

skinparam component{
  BackgroundColor #Orange
}

skinparam file{
  BackgroundColor #lightsalmon
}

skinparam package{
  BackgroundColor #lightblue
}

skinparam node{
  BackgroundColor #Yellow
}

skinparam database{
  BackgroundColor #Lightgreen
}

title Horizon Project: Deployment Diagram \n Version 24.12.27

package "API Layer" as apiLayer{

    node "Load Balnacer and API Manager" as apiServer <<device>>{
        port "443" as api443
        portout "any" as apiAny
        component "Python 3.x" as python3 <<sdk>>
        component "Nginx" as webServer <<web Server>>
        component "flask" as flask <<web framework>>
        component "flask-resx" as flaskrestx <<API framework>>
    }
}

package "Microservice Layer" as microserviceLayer{
    node "Virtual Machine 1: Mirror 1" as vm1 <<vritual machine>>{
        port "443" as docker443_1
        portout "any" as dockerAny_1
        component "docker" as docker_1 <<container>>
        component "Python 3.x" as python3_1<<sdk>>
        component "flask" as flask_1 <<web framework>>
        component "SQLAlchamey" as sqlalchamey_1 <<ORM framework>>
        component "psycopg2" as psycopg2_1 <<data provider>>
    }

    node "Virtual Machine 2: Mirror 2" as vm2 <<vritual machine>>{
        port "443" as docker443_2
        portout "any" as dockerAny_2
        component "docker" as docker_2 <<container>>
        component "Python 3.x" as python3_2<<sdk>>
        component "flask" as flask_2 <<web framework>>
        component "SQLAlchamey" as sqlalchamey_2 <<ORM framework>>
        component "psycopg2" as psycopg2_2 <<data provider>>
    }
}

package "Database Layer" as DatabaseLayer{
    node "Database Server" as databaseServer <<device>>{
        port "5432" as pogresql5432
        component "PostgreSQL" as rdbms <<rdbms>>
    }
}

package "Database Security Layer" as DatabaseSecurityLayer{
    node "Firewall Server" as firewallServer <<device>>{
        port "5432" as firewall5432
        portout "any" as firewallAny
        component "Firewall App" as firewallApp <<service>>
    }
}

package "User Layer" as UserLayer{
    node "Client PC" as client <<device>>{
        portout "any" as clientAny
        component "Chrome or Firefox" <<web browser>>
    }
}

package "App Layer" as AppLayer{
    node "App Server" as appServer <<device>>{
        port "443" as appServer443
        portout "any" as appServerAny
        component "Nginx" as webServer1 <<web server>>
    }
}





webServer ..> python3 : <<use>>
python3 ..> flask : <<use>>
python3 ..> flaskrestx  : <<use>>

python3_1 ..> flask_1 : <<use>>
python3_1 ..> psycopg2_1 : <<use>>
python3_1 ..> sqlalchamey_1  : <<use>>
docker_1 ..> python3_1 : <<use>>

python3_2 ..> flask_2 : <<use>>
python3_2 ..> psycopg2_2 : <<use>>
python3_2 ..> sqlalchamey_2  : <<use>>
docker_2 ..> python3_2 : <<use>>

clientAny -- appServer443 : HTTPS
appServerAny -- api443 : HTTPS

apiAny -- docker443_1 : HTTPS
apiAny -- docker443_2 : HTTPS

dockerAny_1 -- firewall5432 : ODBC 
dockerAny_2 -- firewall5432 : ODBC

firewallAny -- pogresql5432 : ODBC



@enduml